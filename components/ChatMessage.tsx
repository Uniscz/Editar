import React from 'https://esm.sh/react';
import { Message, MessageRole } from '../types';
import { DownloadIcon } from './icons';

interface ChatMessageProps {
  message: Message;
}

const LoadingIndicator = () => (
  <div className="flex items-center space-x-2">
    <div className="w-2 h-2 bg-blue-400 rounded-full animate-pulse [animation-delay:-0.3s]"></div>
    <div className="w-2 h-2 bg-blue-400 rounded-full animate-pulse [animation-delay:-0.15s]"></div>
    <div className="w-2 h-2 bg-blue-400 rounded-full animate-pulse"></div>
  </div>
);

const ChatMessage: React.FC<ChatMessageProps> = ({ message }) => {
  const isUser = message.role === MessageRole.USER;

  const handleDownload = (url: string) => {
    const link = document.createElement('a');
    link.href = url;
    link.download = `generated-image-${Date.now()}.png`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  if (isUser) {
    return (
      <div className="flex justify-end">
        <div className="bg-blue-600 text-white p-3 rounded-lg max-w-2xl">
          {message.text && <p>{message.text}</p>}
          {message.images && (
            <div className="mt-2">
              {message.images.map((img, index) => (
                <img key={index} src={img.url} alt="User attachment" className="rounded-lg max-w-xs" />
              ))}
            </div>
          )}
        </div>
      </div>
    );
  }

  // Model's message
  return (
    <div className="flex justify-start">
      <div className="bg-gray-700 p-3 rounded-lg max-w-2xl space-y-3">
        {message.isLoading ? (
          <LoadingIndicator />
        ) : (
          message.images?.map((img, index) => (
            <div key={index} className="relative group">
              <img src={img.url} alt="Generated by AI" className="rounded-lg max-w-md w-full" />
              <button
                onClick={() => handleDownload(img.url)}
                className="absolute top-2 right-2 bg-black/50 text-white p-2 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-200"
                aria-label="Download image"
              >
                <DownloadIcon />
              </button>
               {img.text && <p className="text-gray-300 mt-2 text-sm">{img.text}</p>}
            </div>
          ))
        )}
      </div>
    </div>
  );
};

export default ChatMessage;
